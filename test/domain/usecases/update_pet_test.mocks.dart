// Mocks generated by Mockito 5.4.6 from annotations
// in petstore_app/test/domain/usecases/update_pet_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:petstore_app/features/pet/data/models/pet_create_request_model.dart'
    as _i5;
import 'package:petstore_app/features/pet/data/models/pet_update_request_model.dart'
    as _i6;
import 'package:petstore_app/features/pet/domain/entities/pet.dart' as _i4;
import 'package:petstore_app/features/pet/domain/repositories/pet_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [PetRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPetRepository extends _i1.Mock implements _i2.PetRepository {
  MockPetRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Pet>> getAvailablePets(String? status) =>
      (super.noSuchMethod(
            Invocation.method(#getAvailablePets, [status]),
            returnValue: _i3.Future<List<_i4.Pet>>.value(<_i4.Pet>[]),
          )
          as _i3.Future<List<_i4.Pet>>);

  @override
  _i3.Future<void> createPet(_i5.PetCreateRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#createPet, [request]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> updatePet(_i6.PetUpdateRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#updatePet, [request]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> deletePet(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePet, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
